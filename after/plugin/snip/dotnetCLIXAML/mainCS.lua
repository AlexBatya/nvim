local ls = require "luasnip"
local s = ls.snippet
local t = ls.text_node
local i = ls.insert_node
local extras = require("luasnip.extras")
local rep = extras.rep
local fmt = require("luasnip.extras.fmt").fmt

local wpf_csharp = {}

function wpf_csharp.add_snip()
    -- üì¶ –û–°–ù–û–í–ù–´–ï –ö–õ–ê–°–°–´ WPF
    ls.add_snippets("cs", {
        -- Window class - –∫–ª–∞—Å—Å –æ–∫–Ω–∞
        s("wclass", fmt(
        [[
using System.Windows;

namespace {} {{
  public partial class {} : Window {{
    public {}() {{
      InitializeComponent();
      {}
    }}
    {}
  }}
}}
]], { i(1, "YourNamespace"), i(2, "MainWindow"), rep(2), i(3), i(0) })
        ),

        -- Page class - –∫–ª–∞—Å—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        s("pclass", fmt(
        [[
using System.Windows.Controls;

namespace {} {{
  public partial class {} : Page {{
    public {}() {{
      InitializeComponent();
      {}
    }}
    {}
  }}
}}
]], { i(1, "YourNamespace"), i(2, "MainPage"), rep(2), i(3), i(0) })
        ),

        -- UserControl class - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç—Ä–æ–ª
        s("ucclass", fmt(
        [[
using System.Windows.Controls;

namespace {} {{
  public partial class {} : UserControl {{
    public {}() {{
      InitializeComponent();
      {}
    }}
    {}
  }}
}}
]], { i(1, "YourNamespace"), i(2, "MyUserControl"), rep(2), i(3), i(0) })
        ),

        -- ViewModel class - MVVM ViewModel
        s("vmclass", fmt(
        [[
using System.ComponentModel;

namespace {}.ViewModels {{
  public class {}ViewModel : INotifyPropertyChanged {{
    public event PropertyChangedEventHandler PropertyChanged;

    public {}ViewModel() {{
      {}
    }}

    protected virtual void OnPropertyChanged(string propertyName) {{
      PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }}
    {}
  }}
}}
]], { i(1, "YourNamespace"), i(2, "Main"), rep(2), i(3), i(0) })
        )
    })

    -- üéØ –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô WPF
    ls.add_snippets("cs", {
        -- Click handler - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
        s("click", fmt(
        [[
private void {}_Click(object sender, RoutedEventArgs e) {{
  {}
}}
]], { i(1, "Button"), i(0) })
        ),

        -- Loaded handler - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏
        s("loaded", fmt(
        [[
private void {}_Loaded(object sender, RoutedEventArgs e) {{
  {}
}}
]], { i(1, "Window"), i(0) })
        ),

        -- Closing handler - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
        s("closing", fmt(
        [[
private void {}_Closing(object sender, CancelEventArgs e) {{
  {}
}}
]], { i(1, "Window"), i(0) })
        ),

        -- SelectionChanged handler - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞
        s("selectchange", fmt(
        [[
private void {}_SelectionChanged(object sender, SelectionChangedEventArgs e) {{
  {}
}}
]], { i(1, "ComboBox"), i(0) })
        ),

        -- TextChanged handler - –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
        s("textchange", fmt(
        [[
private void {}_TextChanged(object sender, TextChangedEventArgs e) {{
  {}
}}
]], { i(1, "TextBox"), i(0) })
        ),

        -- Checked/Unchecked handlers - —Ñ–ª–∞–∂–∫–∏
        s("checked", fmt(
        [[
private void {}_Checked(object sender, RoutedEventArgs e) {{
  {}
}}
]], { i(1, "CheckBox"), i(0) })
        ),

        s("unchecked", fmt(
        [[
private void {}_Unchecked(object sender, RoutedEventArgs e) {{
  {}
}}
]], { i(1, "CheckBox"), i(0) })
        )
    })

    -- ‚ö° MVVM –°–í–û–ô–°–¢–í–ê –ò –ö–û–ú–ê–ù–î–´
    ls.add_snippets("cs", {
        -- Simple property - –ø—Ä–æ—Å—Ç–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ
        s("prop", fmt(
        [[
public {} {} {{ get; set; }}
]], { i(1, "string"), i(2, "Name") })
        ),

        -- Full property - –ø–æ–ª–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ
        s("fprop", fmt(
        [[
private {} {};
public {} {} {{
  get => {};
  set => {} = value;
}}
]], { i(1, "string"), i(2, "_name"), i(3, "string"), i(4, "Name"), rep(2), rep(2) })
        ),

        -- ICommand property - –∫–æ–º–∞–Ω–¥–∞
        s("command", fmt(
        [[
private ICommand {};
public ICommand {} {{
  get => {};
  set {{
    {} = value;
    OnPropertyChanged(nameof({}));
  }}
}}
]], { i(1, "_myCommand"), i(2, "MyCommand"), rep(1), rep(1), rep(2) })
        ),

        -- RelayCommand implementation - —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã
        s("relay", fmt(
        [[
public class RelayCommand : ICommand {{
  private readonly Action _execute;
  private readonly Func<bool> _canExecute;

  public RelayCommand(Action execute, Func<bool> canExecute = null) {{
    _execute = execute ?? throw new ArgumentNullException(nameof(execute));
    _canExecute = canExecute;
  }}

  public bool CanExecute(object parameter) => _canExecute?.Invoke() ?? true;

  public void Execute(object parameter) => _execute();

  public event EventHandler CanExecuteChanged {{
    add => CommandManager.RequerySuggested += value;
    remove => CommandManager.RequerySuggested -= value;
  }}
}}
]], {})
        )
    })

    -- üé® DI –ò –°–ï–†–í–ò–°–´
    ls.add_snippets("cs", {
        -- Dependency Property - —Å–≤–æ–π—Å—Ç–≤–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        s("dprop", fmt(
        [[
public static readonly DependencyProperty {}Property =
  DependencyProperty.Register("{}", typeof({}), typeof({}), new PropertyMetadata({}));

public {} {} {{
  get => ({})GetValue({}Property);
  set => SetValue({}Property, value);
}}
]], { i(1, "Text"), rep(1), i(2, "string"), i(3, "MyControl"), i(4, "null"), rep(2), rep(1), rep(2), rep(1), rep(1) })
        ),

        -- INotifyPropertyChanged implementation
        s("inotify", fmt(
        [[
public event PropertyChangedEventHandler PropertyChanged;

protected virtual void OnPropertyChanged([CallerMemberName] string propertyName = null) {{
  PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
}}

protected bool SetField<T>(ref T field, T value, [CallerMemberName] string propertyName = null) {{
  if (EqualityComparer<T>.Default.Equals(field, value)) return false;
  field = value;
  OnPropertyChanged(propertyName);
  return true;
}}
]], {})
        )
    })

    -- üìä DATA BINDING –ò –ö–û–õ–õ–ï–ö–¶–ò–ò
    ls.add_snippets("cs", {
        -- ObservableCollection - –Ω–∞–±–ª—é–¥–∞–µ–º–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è
        s("obs", fmt(
        [[
private ObservableCollection<{}> {} = new ObservableCollection<{}>();
public ObservableCollection<{}> {} => {};
]], { i(1, "string"), i(2, "_items"), rep(1), rep(1), i(3, "Items"), rep(2) })
        ),

        -- Binding setup - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–≤—è–∑–∫–∏
        s("bind", fmt(
        [[
var binding = new Binding("{}") {{
  Source = {},
  Mode = BindingMode.{},
  UpdateSourceTrigger = UpdateSourceTrigger.{}
}};
{}.SetBinding({}.{}Property, binding);
]], { i(1, "PropertyName"), i(2, "this"), i(3, "TwoWay"), i(4, "PropertyChanged"), i(5, "MyControl"), i(6, "TextBox"), i(7, "Text") })
        )
    })

    -- üé≠ –°–û–û–ë–©–ï–ù–ò–Ø –ò –î–ò–ê–õ–û–ì–ò
    ls.add_snippets("cs", {
        -- MessageBox - —Å–æ–æ–±—â–µ–Ω–∏–µ
        s("msg", fmt(
        [[
MessageBox.Show("{}", "{}", MessageBoxButton.{}, MessageBoxImage.{});
]], { i(1, "–°–æ–æ–±—â–µ–Ω–∏–µ"), i(2, "–ó–∞–≥–æ–ª–æ–≤–æ–∫"), i(3, "OK"), i(4, "Information") })
        ),

        -- OpenFileDialog - –¥–∏–∞–ª–æ–≥ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞
        s("openfile", fmt(
        [[
var dialog = new OpenFileDialog {{
  Title = "{}",
  Filter = "{}",
  DefaultExt = "{}"
}};

if (dialog.ShowDialog() == true) {{
  {}
}}
]], { i(1, "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª"), i(2, "–í—Å–µ —Ñ–∞–π–ª—ã|*.*"), i(3, "txt"), i(0) })
        ),

        -- SaveFileDialog - –¥–∏–∞–ª–æ–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
        s("savefile", fmt(
        [[
var dialog = new SaveFileDialog {{
  Title = "{}",
  Filter = "{}",
  DefaultExt = "{}"
}};

if (dialog.ShowDialog() == true) {{
  {}
}}
]], { i(1, "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª"), i(2, "–¢–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã|*.txt"), i(3, "txt"), i(0) })
        )
    })

    -- üîß –£–¢–ò–õ–ò–¢–´ –ò –•–ï–õ–ü–ï–†–´
    ls.add_snippets("cs", {
        -- Dispatcher invoke - –≤—ã–∑–æ–≤ –≤ UI –ø–æ—Ç–æ–∫–µ
        s("dispatch", fmt(
        [[
Application.Current.Dispatcher.Invoke(() => {{
  {}
}});
]], { i(0) })
        ),

        -- Async method - –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥
        s("async", fmt(
        [[
private async Task {}Async() {{
  {}
}}
]], { i(1, "LoadData"), i(0) })
        ),

        -- Try-catch block - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
        s("try", fmt(
        [[
try {{
  {}
}}
catch (Exception ex) {{
  MessageBox.Show($"–û—à–∏–±–∫–∞: {{ex.Message}}");
}}
]], { i(0) })
        ),

        -- Using statement - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
        s("using", fmt(
        [[
using (var {} = new {}()) {{
  {}
}}
]], { i(1, "stream"), i(2, "FileStream"), i(0) })
        ),

        -- Region directive - —Ä–µ–≥–∏–æ–Ω
        s("region", fmt(
        [[
#region {}
{}
#endregion
]], { i(1, "Properties"), i(0) })
        ),

        -- Constructor - –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
        s("ctor", fmt(
        [[
public {}() {{
  {}
}}
]], { i(1, "MyClass"), i(0) })
        ),

        -- Property changed call - –≤—ã–∑–æ–≤ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤–∞
        s("propchange", fmt(
        [[
OnPropertyChanged(nameof({}));
]], { i(1, "PropertyName") })
        )
    })

    -- üé™ WPF –°–ü–ï–¶–ò–§–ò–ß–ù–´–ï –ú–ï–¢–û–î–´
    ls.add_snippets("cs", {
        -- FindName –ø–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞
        s("find", fmt(
        [[
var {} = ({})FindName("{}");
if ({} != null) {{
  {}
}}
]], { i(1, "control"), i(2, "Button"), i(3, "myButton"), rep(1), i(0) })
        ),

        -- DataContext –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ
        s("dcast", fmt(
        [[
var viewModel = ({})DataContext;
if (viewModel != null) {{
  {}
}}
]], { i(1, "MainViewModel"), i(0) })
        ),

        -- Resource –ø–æ–ª—É—á–µ–Ω–∏–µ
        s("resource", fmt(
        [[
var {} = ({})FindResource("{}");
]], { i(1, "resource"), i(2, "Brush"), i(3, "MyBrush") })
        )
    })

    -- üìù –ê–¢–†–ò–ë–£–¢–´ –ò –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò
    ls.add_snippets("cs", {
        -- XML –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        s("xmlcom", fmt(
        [[
/// <summary>
/// {}
/// </summary>
/// <param name="{}">{}</param>
/// <returns>{}</returns>
]], { i(1, "–û–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞"), i(2, "parameter"), i(3, "–û–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞"), i(4, "–û–ø–∏—Å–∞–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è") })
        ),

        -- Attribute - –∞—Ç—Ä–∏–±—É—Ç
        s("attr", fmt(
        [[
[{}]
]], { i(1, "Serializable") })
        )
    })
end

-- üìã –ö–†–ê–¢–ö–ê–Ø –®–ü–ê–†–ì–ê–õ–ö–ê –ü–û C# –°–ù–ò–ü–ü–ï–¢–ê–ú:
-- wclass     - –ö–ª–∞—Å—Å –æ–∫–Ω–∞ WPF
-- pclass     - –ö–ª–∞—Å—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã WPF  
-- ucclass    - –ö–ª–∞—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª–∞
-- vmclass    - ViewModel –∫–ª–∞—Å—Å (MVVM)
-- click      - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
-- loaded     - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏
-- mvvmprop   - MVVM —Å–≤–æ–π—Å—Ç–≤–æ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º
-- prop       - –ü—Ä–æ—Å—Ç–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ
-- command    - ICommand —Å–≤–æ–π—Å—Ç–≤–æ
-- relay      - RelayCommand —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
-- dprop      - Dependency Property
-- inotify    - INotifyPropertyChanged
-- obs        - ObservableCollection
-- msg        - MessageBox –ø–æ–∫–∞–∑–∞—Ç—å
-- openfile   - OpenFileDialog –¥–∏–∞–ª–æ–≥
-- savefile   - SaveFileDialog –¥–∏–∞–ª–æ–≥
-- dispatch   - Dispatcher invoke
-- async      - –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥
-- try        - Try-catch –±–ª–æ–∫
-- region     - Region –¥–∏—Ä–µ–∫—Ç–∏–≤–∞
-- ctor       - –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
-- find       - FindName –ø–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞
-- dcast      - DataContext –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ
-- xmlcom     - XML –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π

return wpf_csharp

-- üìã –ö–†–ê–¢–ö–ê–Ø –®–ü–ê–†–ì–ê–õ–ö–ê –ü–û C# –°–ù–ò–ü–ü–ï–¢–ê–ú:
-- wclass     - –ö–ª–∞—Å—Å –æ–∫–Ω–∞ WPF
-- pclass     - –ö–ª–∞—Å—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã WPF  
-- ucclass    - –ö–ª–∞—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª–∞
-- vmclass    - ViewModel –∫–ª–∞—Å—Å (MVVM)
-- click      - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
-- loaded     - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏
-- mvvmprop   - MVVM —Å–≤–æ–π—Å—Ç–≤–æ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º
-- prop       - –ü—Ä–æ—Å—Ç–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ
-- command    - ICommand —Å–≤–æ–π—Å—Ç–≤–æ
-- relay      - RelayCommand —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
-- dprop      - Dependency Property
-- inotify    - INotifyPropertyChanged
-- obs        - ObservableCollection
-- msg        - MessageBox –ø–æ–∫–∞–∑–∞—Ç—å
-- openfile   - OpenFileDialog –¥–∏–∞–ª–æ–≥
-- savefile   - SaveFileDialog –¥–∏–∞–ª–æ–≥
-- dispatch   - Dispatcher invoke
-- async      - –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥
-- try        - Try-catch –±–ª–æ–∫
-- region     - Region –¥–∏—Ä–µ–∫—Ç–∏–≤–∞
-- ctor       - –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
-- find       - FindName –ø–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞
-- dcast      - DataContext –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ
-- xmlcom     - XML –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
